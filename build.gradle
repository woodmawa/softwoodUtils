/*
buildscript {
    repositories {
        mavenCentral()
        //jcenter()
        maven {
            url "https://dl.bintray.com/asciidoctor/maven/"
        }
        maven {
            url "https://plugins.gradle.org/m2/"
        }

    }

    dependencies {
        classpath "org.asciidoctor:asciidoctor-gradle-jvm:${gradle_asciidoctor_version}",
                "org.asciidoctor:asciidoctor-gradle-jvm-gems:${gradle_asciidoctor_version}"
    }
}
*/

/**
 * this this is the latest version of asciidoctor plugin in new form
 *
 * see https://docs.gradle.org/current/userguide/plugins.html#sec:subprojects_plugins_dsl
 *
 * set apply false at root project level -
 * then use apply plugin in the allProjects{} or subprojects{} closures
 *
 */
plugins {
    id "org.asciidoctor.jvm.gems" version "${gradle_asciidoctor_version}" apply false
    id "org.asciidoctor.jvm.convert" version "${gradle_asciidoctor_version}" apply false
    id 'org.asciidoctor.jvm.pdf' version "${gradle_asciidoctor_version}" apply false
}


/* cant use this form with allprojects {}
//https://stackoverflow.com/questions/26236308/how-to-apply-plugin-to-allprojects-with-new-gradle-plugins-mechanism

plugins {
    id 'groovy'
    id 'java-library'
    id 'maven-publish'
}

 */
allprojects {

    //cant use new plugins feature in all projects or subprojects yet - a known issue
    apply plugin: 'java-library'
    apply plugin: 'groovy'
    apply plugin: 'maven-publish'
    apply plugin: 'org.asciidoctor.jvm.convert'  //latest flavor
    apply plugin: "org.asciidoctor.jvm.gems"
    apply plugin: "org.asciidoctor.jvm.pdf"
    //apply plugin: "com.github.jruby-gradle.base"    //needed for asciidoctor-pdf
    apply from: "${rootProject.projectDir}/gradle/indy.gradle"
    //apply from: "${rootProject.projectDir}/gradle/asciidoctor.gradle"

    asciidoctor {
        attributes 'build-gradle': file('build.gradle'),
                'sourcedir': project.sourceSets.main.java.srcDirs[0],
                'endpoint-url': 'http://example.org',
                'imagesdir': 'images',
                'source-highlighter': 'coderay',
                'toc': 'left',
                'icons': 'font',
                'setanchors': '',
                'idprefix': '',
                'idseparator': '-',
                'docinfo': 'shared'

    }

    /*todo fix
    tasks.withType(org.asciidoctor.jvm.gradle.AsciidoctorTask) {

        outputs.cacheIf { true }
    }
    */

    //try incremental compile feature for groovy
    tasks.withType(GroovyCompile).configureEach {
        options.incremental = true
    }

    repositories {
        mavenCentral()
        mavenLocal()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots/' }

    }

    //give each project its default dependencies
    dependencies {

        //implementation replaces compile and is not transitevly resolved, API is transitively resolved
        implementation group: 'org.codehaus.groovy', name: 'groovy-all', version: '3.0.9'
        implementation group: 'ch.qos.logback', name: 'logback-classic', version: '1.2.3'

        implementation group: 'javax.inject', name: 'javax.inject', version: '1'
        testImplementation group: 'junit', name: 'junit', version: '4.13'
        //need to remove this dependency !
        testImplementation group: 'org.testng', name: 'testng', version: '7.5'
        testImplementation group: 'org.spockframework', name: 'spock-core', version: '2.0-M2-groovy-3.0' /*{
        exclude group: 'org.codehaus.groovy', name: 'groovy-all'
    }*/

    }

    buildDir = 'target'
    sourceCompatibility = 1.11
    targetCompatibility = 1.11

    //todo - fix this where is isReleaseVersion?
    //ext.buildDate = isReleaseVersion?new Date():new Date(0)

    /*
     * todod
    task generateReleaseInfo(type: ReleaseInfoGenerator) {
        version = rootProject.groovyVersion
        bundleVersion = rootProject.groovyBundleVersion
        buildDate = rootProject.buildDate
        outputFile = file("$buildDir/release-info/groovy-release-info.properties")
    }*/

//should include java and groovy
    task sourceJar(type: Jar) {
        from sourceSets.main.allGroovy
        classifier "sources"
    }

    publishing {
        publications {
            mavenGroovy(MavenPublication) {
                from components.java
                artifact(sourceJar) {
                    classifier = 'sources'
                }
                // more goes in here
            }
        }
        repositories {
            mavenLocal()
        }
    }
}

